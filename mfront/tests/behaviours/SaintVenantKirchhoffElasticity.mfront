@Parser DefaultFiniteStrainParser;
@Behaviour SaintVenantKirchhoffElasticity;
@Author T. Helfer;
@Date 19/10/2013;

@MaterialProperty stress young;
young.setGlossaryName("YoungModulus");
@MaterialProperty real nu;
nu.setGlossaryName("PoissonRatio");

@LocalVariable stress lambda;
@LocalVariable stress mu;

@Includes{
#include"TFEL/Material/Lame.hxx"
}

@Integrator{
  using namespace tfel::material::lame;
  // Lame coefficients
  lambda = computeLambda(young,nu);
  mu     = computeMu(young,nu);
  // Green-Lagrange tensor
  const StrainStensor e = computeGreenLagrangeTensor(F1);
  // second Piolaâ€“Kirchhoff stress
  const StressStensor s = lambda*trace(e)*StrainStensor::Id()+2*mu*e;
  // convertion to Cauchy stress tensor
  sig = convertSecondPiolaKirchhoffStressToCauchyStress(s,F1);
  if(computeTangentOperator_){
    StiffnessTensor De = 0.5*(lambda*Stensor4::IxI()+2*mu*Stensor4::Id());
    if(smflag==DS_DEGL){
      Dt = De;
    } else if(smflag==DS_DC){
      Dt = 0.5*De;
    } else if(smflag==DS_DF){
      //      Dt = De*t2tost2<N,strain>::dCdF(F1);
    } else if (smflag==DS_DDF){
      //      Dt = De*t2tost2<N,strain>::dCdF(F1);
    }
  }
}
