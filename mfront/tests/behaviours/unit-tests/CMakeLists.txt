macro(mfront_unit_test file)
  set(_WILL_FAIL )
  foreach(_ARG ${ARGN})
    if ( ${_ARG} MATCHES WILL_FAIL)
      set ( _WILL_FAIL ON)
    else()
      message(FATAL_ERROR "test_castem: unsupported option '${_ARG}'")
    endif()
  endforeach(_ARG ${ARGN})
  set(mfront_file   "${PROJECT_SOURCE_DIR}/mfront/tests/behaviours/unit-tests/${file}.mfront")
  set(mfront_executable "$<TARGET_FILE:mfront>")
  add_test(NAME mfront-unit-tests-${file}
    COMMAND ${mfront_executable}
    --no-gui --search-path=${PROJECT_SOURCE_DIR}/mfront/tests/behaviours
    --search-path=${PROJECT_SOURCE_DIR}/mfront/tests/properties
    ${mfront_file})
  if((CMAKE_HOST_WIN32) AND (NOT MSYS))
    set_property(TEST mfront-unit-tests-${file}
 	         APPEND PROPERTY ENVIRONMENT "PATH=$<TARGET_FILE_DIR:TFELMFront>\;$<TARGET_FILE_DIR:MFrontLogStream>\;$<TARGET_FILE_DIR:TFELMaterial>\;$<TARGET_FILE_DIR:TFELNUMODIS>\;$<TARGET_FILE_DIR:TFELMath>\;$<TARGET_FILE_DIR:TFELSystem>\;$<TARGET_FILE_DIR:TFELUtilities>\;$<TARGET_FILE_DIR:TFELGlossary>\;$<TARGET_FILE_DIR:TFELException>\;$<TARGET_FILE_DIR:TFELConfig>\;$<TARGET_FILE_DIR:TFELUnicodeSupport>\;$ENV{PATH}")
  endif((CMAKE_HOST_WIN32) AND (NOT MSYS))
  if(_WILL_FAIL)
    set_tests_properties(mfront-unit-tests-${file}
      PROPERTIES WILL_FAIL true)
  endif(_WILL_FAIL)
endmacro(mfront_unit_test file)

mfront_unit_test(ComputeThermalExpansion  WILL_FAIL)
mfront_unit_test(ComputeThermalExpansion2 WILL_FAIL)
mfront_unit_test(ComputeThermalExpansion3 WILL_FAIL)
mfront_unit_test(ComputeThermalExpansion4 WILL_FAIL)
mfront_unit_test(ComputeThermalExpansion5)
mfront_unit_test(ComputeThermalExpansion6 WILL_FAIL)

mfront_unit_test(ComputeStiffnessTensor   WILL_FAIL)
mfront_unit_test(ComputeStiffnessTensor2  WILL_FAIL)
mfront_unit_test(ComputeStiffnessTensor3  WILL_FAIL)
mfront_unit_test(BehaviourVariable1       WILL_FAIL)
mfront_unit_test(BehaviourVariable2       WILL_FAIL)
mfront_unit_test(BehaviourVariable3       WILL_FAIL)
mfront_unit_test(BehaviourVariable4       WILL_FAIL)
mfront_unit_test(BehaviourVariable5       WILL_FAIL)
mfront_unit_test(BehaviourVariable6       WILL_FAIL)
mfront_unit_test(BehaviourVariable7       WILL_FAIL)
mfront_unit_test(BehaviourVariable8       WILL_FAIL)
mfront_unit_test(BehaviourVariable9       WILL_FAIL)
mfront_unit_test(BehaviourVariable10      WILL_FAIL)
mfront_unit_test(BehaviourVariable11      WILL_FAIL)
mfront_unit_test(BehaviourVariable12      WILL_FAIL)
mfront_unit_test(BehaviourVariable13      WILL_FAIL)
