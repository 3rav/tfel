/*!
 * \file   ImplicitNorton3.mfront
 * \brief  
 * 
 * \author Helfer Thomas
 * \date   1 07 2014
 */

@DSL Implicit;
@Behaviour ImplicitNorton3;
@Description{
  This file implements the Norton law, described as:
  "$$"
  "\left\{"
  "  \begin{aligned}"
  "    \tepsilonto   &= \tepsilonel+\tepsilonvis \\"
  "    \tsigma       &= \tenseurq{D}\,:\,\tepsilonel\\"
  "    \tdepsilonvis &= \dot{p}\,\tenseur{n} \\"
  "    \dot{p}       &= A\,\sigmaeq^{m}"
  "  \end{aligned}"
  "\right."
  "$$"
  We test here the substepping facility provided by the UMAT Interface.
}

@Epsilon 1.e-11;
@UMATUseTimeSubStepping[umat] true;
@UMATMaximumSubStepping[umat] 20;

@MaterialProperty stress young; /* mandatory for castem */
young.setGlossaryName("YoungModulus");
@MaterialProperty real nu;    /* mandatory for castem */
nu.setGlossaryName("PoissonRatio");

@LocalVariable real     lambda;
@LocalVariable real     mu;

// store for the Von Mises stress 
// for the tangent operator
@LocalVariable real seq;
// store the derivative of the creep function
// for the tangent operator
@LocalVariable real df_dseq;
// store the normal tensor
// for the tangent operator
@LocalVariable Stensor n;

@StateVariable real    p;
p.setGlossaryName("EquivalentViscoplasticStrain");
@PhysicalBounds p in [0:*[;

/* Initialize Lame coefficients */
@InitLocalVars{
  lambda = computeLambda(young,nu);
  mu = computeMu(young,nu);
  if(dt>0.1){
    throw(DivergenceException());
  }
} // end of @InitLocalVars

@ComputeStress{
  sig = lambda*trace(eel)*Stensor::Id()+2*mu*eel;
} // end of @ComputeStresss

@Integrator{
  const real A = 8.e-67;
  const real E = 8.2;
  seq = sigmaeq(sig);
  const real tmp = A*pow(seq,E-1.);
  df_dseq = E*tmp;
  real inv_seq(0);
  n = Stensor(0.);
  if(seq > 1.e-8*young){
    inv_seq = 1/seq;
    n       = 1.5*deviator(sig)*inv_seq;
  }
  feel += dp*n-deto;
  fp   -= tmp*seq*dt;
  // jacobian
  dfeel_ddeel += 2.*mu*theta*dp*inv_seq*(Stensor4::M()-(n^n));
  dfeel_ddp    = n;
  dfp_ddeel    = -2*mu*theta*df_dseq*dt*n;
} // end of @Integrator
