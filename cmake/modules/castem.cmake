message(STATUS "looked for castem library.")

if(CASTEM_INSTALL_PATH)
  set(CASTEMHOME "${CASTEM_INSTALL_PATH}")
else(CASTEM_INSTALL_PATH)
  set(CASTEMHOME $ENV{CASTEMHOME})
endif(CASTEM_INSTALL_PATH)

if(CASTEMHOME)
    find_path(CASTEM_INCLUDE_DIR castem.h
              HINTS ${CASTEMHOME}/include)
    if(CASTEM_INCLUDE_DIR STREQUAL "CASTEM_INCLUDE_DIR-NOTFOUND")
    	message(FATAL_ERROR "castem.h not found")
    endif(CASTEM_INCLUDE_DIR STREQUAL "CASTEM_INCLUDE_DIR-NOTFOUND")
    message(STATUS "Include file detected: [${CASTEM_INCLUDE_DIR}].")
    if(WIN32)
    add_definitions("-DCASTEM_CPPFLAGS=\\\"\"\"\\\"")	
    endif(WIN32)
    if(UNIX)
        if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
	  set(CASTEM_CPPFLAGS "-DSUN -DUNIX64 -DTHREAD")
	  add_definitions("-DCASTEM_UNIX_TYPE=UNIX64")
	else( CMAKE_SIZEOF_VOID_P EQUAL 8 )
	  set(CASTEM_CPPFLAGS "-DSUN -DUNIX32 -DTHREAD")
	  add_definitions("-DCASTEM_UNIX_TYPE=UNIX32")
	endif( CMAKE_SIZEOF_VOID_P EQUAL 8 )
        add_definitions("-DCASTEM_CPPFLAGS=\\\"\"${CASTEM_CPPFLAGS}\"\\\"")
    	add_definitions("${CASTEM_CPPFLAGS}")
    endif(UNIX)
    set(CASTEM_ROOT "${CASTEMHOME}")
    add_definitions("-DCASTEM_ROOT=\\\"\"${CASTEMHOME}\"\\\"")
    add_definitions("-DHAVE_CASTEM=1")
    set(HAVE_CASTEM ON)
else(CASTEMHOME)
  message(WARNING "no CASTEMHOME defined")
endif(CASTEMHOME)
